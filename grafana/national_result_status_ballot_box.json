{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 11,
  "iteration": 1573626230329,
  "links": [],
  "panels": [
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "#8e24aa",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 1,
        "w": 14,
        "x": 5,
        "y": 0
      },
      "id": 66,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "200%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "Presidential Election 2019 [ EC System Test 7 ]",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select \"$elections\"\n\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "50%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#8e24aa",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 49,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "200%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "National Ballot Box Count",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- select if($districtLength < 100,\"$district\",\"All Districts\")\nselect \"National Ballot Box Count\"\n-- -- LENGTH($district) - LENGTH(REPLACE($district, ',', ''))\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "150%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "\n\n\n",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 70,
      "links": [],
      "mode": "markdown",
      "options": {},
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select \"Unofficial\"\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Unofficial Balllot Box Count",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "content": "# CE - 201 (PV)\n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 4
      },
      "id": 69,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "content": "\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 5,
        "y": 4
      },
      "id": 56,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 9,
        "y": 4
      },
      "id": 10,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "CC",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false,
        "ymax": null,
        "ymin": null
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n    concat(if(completedCountingCentres is null,0,completedCountingCentres),'/',totalCountingCentres,' - ',IF(totalCountingCentres<>0 AND completedCountingCentres<>0,concat(round(( completedCountingCentres/totalCountingCentres * 100 ))),0)) AS value \n    FROM (\n    SELECT \n        $PostalCountingCentres AS totalCountingCentres,\n        SUM(IF(status = \"Submitted\" OR status = \"Entered\" OR status = \"Verified\",1,0)) AS completedCountingCentres\n    FROM (\n    SELECT \n        countingCentreId,\n        status\n    FROM dashboard_status_CE_201\n    WHERE dashboard_status_CE_201.electionId = \"$electionId\"\n    AND dashboard_status_CE_201.voteType = \"Postal\"\n    GROUP BY countingCentreId\n    ) AS T1\n    ) AS T2\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "\n\n",
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 14,
        "y": 4
      },
      "id": 68,
      "links": [],
      "mode": "markdown",
      "options": {},
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \nconcat(if(completedCountingCentres is null,0,completedCountingCentres),'/',totalCountingCentres,' - ',IF(totalCountingCentres<>0 AND completedCountingCentres<>0,concat(round(( completedCountingCentres/totalCountingCentres * 100 ))),0)) AS value \nFROM (\nSELECT \n    $PostalCountingCentres AS totalCountingCentres,\n    SUM(IF(status = \"verified\",1,0)) AS completedCountingCentres\nFROM (\n    SELECT \n    countingCentreId,\n    status\n    FROM dashboard_status_PRE_41\n    WHERE electionId = \"$electionId\"\n    AND voteType = \"Postal\"\n    AND electoralDistrictId = \"$districtId\"\n    GROUP BY countingCentreId\n  ) AS counting_centre_wise_status\n) AS T1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 19,
        "y": 4
      },
      "id": 91,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "ED",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \nconcat(if(completedElectoralDistricts is null,0,completedElectoralDistricts),'/',totalElectoralDistricts,' - ',IF(totalElectoralDistricts<>0 AND completedElectoralDistricts<>0,concat(round(( completedElectoralDistricts/totalElectoralDistricts * 100 ))),0)) AS value \nFROM (\n        SELECT \n        $totalElectoralDistricts AS totalElectoralDistricts,\n        SUM(IF(totalCountingCentres=completedCountingCentres,1,0)) AS completedElectoralDistricts\n        FROM (\n          SELECT \n            COUNT(DISTINCT dashboard_status_CE_201.countingCentreId) AS completedCountingCentres,\n            COUNT(DISTINCT area_map.countingCentreId) AS totalCountingCentres,\n            electoralDistrict.areaName as electoralDistrict  \n          FROM \n            area_map\n            join area as pollingDivision on pollingDivision.areaId = area_map.pollingDivisionId\n            join area as electoralDistrict on electoralDistrict.areaId = area_map.electoralDistrictId\n            left join  dashboard_status_CE_201 on dashboard_status_CE_201.countingCentreId = area_map.countingCentreId\n              and dashboard_status_CE_201.voteType = \"Postal\"\n              and dashboard_status_CE_201.electionId = \"$electionId\"\n          GROUP BY\n            area_map.electoralDistrictId\n          ) AS T1\n          ) AS T2",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "# CE - 201 \n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 6
      },
      "id": 50,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 4,
        "y": 6
      },
      "id": 53,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "PS",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT \n--     concat(completedPollingStations,'/',totalPollingStations,' - ',IF(totalPollingStations<>0 AND completedPollingStations<>0,concat(round(( completedPollingStations/totalPollingStations * 100 ))),0)) AS value FROM (\n--     SELECT \n--         COUNT(DISTINCT pollingStation) AS totalPollingStations,\n--         SUM(IF(status = \"verrified\",1,0)) AS completedPollingStations\n--     FROM dashboard_status_CE_201\n--     WHERE electionName = \"$elections\"\n--     AND electoralDistrict = \"$district\"\n--     AND voteType = \"Ordinary\"\n--     ) AS T1\nSELECT \n    concat(if(completedPollingStations is null,0,completedPollingStations),'/',totalPollingStations,' - ',IF(totalPollingStations<>0 AND completedPollingStations<>0,concat(round(( completedPollingStations/totalPollingStations * 100 ))),0)) AS value FROM (\n    SELECT \n        $totalPollingStations AS totalPollingStations,\n        SUM(IF(status = \"Submitted\" OR status = \"Entered\" OR status = \"Verified\",1,0)) AS completedPollingStations\n    FROM dashboard_status_CE_201\n    WHERE electionId = \"$electionId\"\n    AND voteType = \"Ordinary\" \n    ) AS T1\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 9,
        "y": 6
      },
      "id": 78,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "CC",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n    concat(if(completedCountingCentres is null,0,completedCountingCentres),'/',totalCountingCentres,' - ',IF(totalCountingCentres<>0 AND completedCountingCentres<>0,concat(round(( completedCountingCentres/totalCountingCentres * 100 ))),0)) AS value \n    FROM (\n    SELECT \n        $OrdinaryCountingCentres AS totalCountingCentres,\n        SUM(IF(status = \"Submitted\" OR status = \"Entered\" OR status = \"Verified\",1,0)) AS completedCountingCentres\n    FROM (\n    SELECT \n        countingCentreId,\n        status\n    FROM dashboard_status_CE_201\n    WHERE electionId = \"$electionId\"\n    AND voteType = \"Ordinary\"\n    GROUP BY countingCentreId\n    ) AS T1\n    ) AS T2\n\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 14,
        "y": 6
      },
      "id": 52,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "PD",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT \n--     concat(if(completedPollingDivisions is null,0,completedPollingDivisions),'/',totalPollingDivisions,' - ',IF(totalPollingDivisions<>0 AND completedPollingDivisions<>0,concat(round(( completedPollingDivisions/totalPollingDivisions * 100 ))),0)) AS value \n--     FROM (\n--     SELECT \n--         $OrdinaryPollingDivisions AS totalPollingDivisions,\n--         SUM(IF(totalCountingCentres=completedCountingCentres,1,0)) AS completedPollingDivisions\n--         FROM (\n--         SELECT \n--         $OrdinaryCountingCentres AS totalCountingCentres,\n--         SUM(IF(status = \"Verified\",1,0)) AS completedCountingCentres\n--     FROM (\n--     SELECT \n--         countingCentreId,\n--         status\n--         FROM dashboard_status_CE_201\n--     WHERE electionId = \"$electionId\"\n--     AND voteType = \"Ordinary\"\n--     AND electoralDistrictId = \"$districtId\"\n--     GROUP BY countingCentreId\n--     ) AS T1\n--     ) AS T2\n--     ) AS T3\n\n\nSELECT\n      concat(if(completedPollingDivisions is null,0,completedPollingDivisions),'/',$OrdinaryPollingDivisions,' - ',IF($OrdinaryPollingDivisions<>0 AND completedPollingDivisions<>0,concat(round(( completedPollingDivisions/$OrdinaryPollingDivisions * 100 ))),0)) AS value \nFROM\n  (\n    SELECT\n      SUM(IF(notCompletedCountingCentres = 0, 1, 0)) as completedPollingDivisions\n    FROM\n      (\n        SELECT \n          pollingDivision.*,\n          SUM(IF(status = \"Submitted\" OR status = \"Entered\" OR status = \"Verified\",0,1)) as notCompletedCountingCentres\n        FROM \n          dashboard_status_CE_201\n          join area_map on area_map.countingCentreId = dashboard_status_CE_201.countingCentreId\n          join area as pollingDivision on pollingDivision.areaId = area_map.pollingDivisionId\n        WHERE \n          dashboard_status_CE_201.electionId = \"$electionId\"\n          AND dashboard_status_CE_201.voteType = \"Ordinary\"\n        GROUP BY\n          area_map.pollingDivisionId\n      ) as pollingDivision201Status\n    ) as pollingDivision201Summary",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 19,
        "y": 6
      },
      "id": 93,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "ED",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \nconcat(if(completedElectoralDistricts is null,0,completedElectoralDistricts),'/',totalElectoralDistricts,' - ',IF(totalElectoralDistricts<>0 AND completedElectoralDistricts<>0,concat(round(( completedElectoralDistricts/totalElectoralDistricts * 100 ))),0)) AS value \nFROM (\n        SELECT \n        $totalElectoralDistricts AS totalElectoralDistricts,\n        SUM(IF(totalCountingCentres=completedCountingCentres,1,0)) AS completedElectoralDistricts\n        FROM (\n          SELECT \n            COUNT(DISTINCT dashboard_status_CE_201.countingCentreId) AS completedCountingCentres,\n            COUNT(DISTINCT area_map.countingCentreId) AS totalCountingCentres,\n            electoralDistrict.areaName as electoralDistrict  \n          FROM \n            area_map\n            join area as pollingDivision on pollingDivision.areaId = area_map.pollingDivisionId\n            join area as electoralDistrict on electoralDistrict.areaId = area_map.electoralDistrictId\n            left join  dashboard_status_CE_201 on dashboard_status_CE_201.countingCentreId = area_map.countingCentreId\n              and dashboard_status_CE_201.voteType = \"Ordinary\"\n              and dashboard_status_CE_201.electionId = \"$electionId\"\n          GROUP BY\n            area_map.electoralDistrictId\n          ) AS T1\n          ) AS T2",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "\n\n",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 71,
      "links": [],
      "mode": "markdown",
      "options": {},
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- select sum(($totalPolledValidOrdinaryVotes + $totalPolledValidPostalVotes + $totalPolledRejectedPostalVotes + $totalPolledRejectedOrdinaryVotes)/($totalRegisteredOrdinaryVoters + $totalRegisteredPostalVoters) * 100)\n SELECT IF(sum($totalPolledValidOrdinaryVotes + $totalPolledValidPostalVotes + $totalPolledRejectedPostalVotes + $totalPolledRejectedOrdinaryVotes)<>0 AND sum($totalRegisteredOrdinaryVoters + $totalRegisteredPostalVoters)<>0,\n          (round(( ($totalPolledValidOrdinaryVotes + $totalPolledValidPostalVotes + $totalPolledRejectedPostalVotes + $totalPolledRejectedOrdinaryVotes)/($totalRegisteredOrdinaryVoters + $totalRegisteredPostalVoters) * 100 ))),0) AS percentage \n\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Official Ballot Box Count",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "content": "# CE - 201 (PV)\n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 9
      },
      "id": 72,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "content": "\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 6,
        "y": 9
      },
      "id": 74,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#00796b",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 9,
        "y": 9
      },
      "id": 73,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "CC",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n    concat(if(completedCountingCentres is null,0,completedCountingCentres),'/',totalCountingCentres,' - ',IF(totalCountingCentres<>0 AND completedCountingCentres<>0,concat(round(( completedCountingCentres/totalCountingCentres * 100 ))),0)) AS value \n    FROM (\n    SELECT \n        $PostalCountingCentres AS totalCountingCentres,\n        SUM(IF(status = \"Verified\",1,0)) AS completedCountingCentres\n    FROM (\n    SELECT \n        countingCentreId,\n        status\n    FROM dashboard_status_CE_201\n    WHERE electionId = \"$electionId\"\n    AND voteType = \"Postal\"\n    GROUP BY countingCentreId\n    ) AS T1\n    ) AS T2",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "\n\n",
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 14,
        "y": 9
      },
      "id": 75,
      "links": [],
      "mode": "markdown",
      "options": {},
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \nconcat(if(completedCountingCentres is null,0,completedCountingCentres),'/',totalCountingCentres,' - ',IF(totalCountingCentres<>0 AND completedCountingCentres<>0,concat(round(( completedCountingCentres/totalCountingCentres * 100 ))),0)) AS value \nFROM (\nSELECT \n    $PostalCountingCentres AS totalCountingCentres,\n    SUM(IF(status = \"verified\",1,0)) AS completedCountingCentres\nFROM (\n    SELECT \n    countingCentreId,\n    status\n    FROM dashboard_status_PRE_41\n    WHERE electionId = \"$electionId\"\n    AND voteType = \"Postal\"\n    AND electoralDistrictId = \"$districtId\"\n    GROUP BY countingCentreId\n  ) AS counting_centre_wise_status\n) AS T1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#00796b",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 19,
        "y": 9
      },
      "id": 92,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "ED",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \nconcat(if(completedElectoralDistricts is null,0,completedElectoralDistricts),'/',totalElectoralDistricts,' - ',IF(totalElectoralDistricts<>0 AND completedElectoralDistricts<>0,concat(round(( completedElectoralDistricts/totalElectoralDistricts * 100 ))),0)) AS value \nFROM (\n        SELECT \n        $totalElectoralDistricts AS totalElectoralDistricts,\n        SUM(IF(totalCountingCentres=completedCountingCentres,1,0)) AS completedElectoralDistricts\n        FROM (\n          SELECT \n            COUNT(DISTINCT dashboard_status_CE_201.countingCentreId) AS completedCountingCentres,\n            COUNT(DISTINCT area_map.countingCentreId) AS totalCountingCentres,\n            electoralDistrict.areaName as electoralDistrict  \n          FROM \n            area_map\n            join area as pollingDivision on pollingDivision.areaId = area_map.pollingDivisionId\n            join area as electoralDistrict on electoralDistrict.areaId = area_map.electoralDistrictId\n            left join  dashboard_status_CE_201 on dashboard_status_CE_201.countingCentreId = area_map.countingCentreId\n              and dashboard_status_CE_201.status = \"Verified\"\n              and dashboard_status_CE_201.voteType = \"Postal\"\n              and dashboard_status_CE_201.electionId = \"$electionId\"\n          GROUP BY\n            area_map.electoralDistrictId\n          ) AS T1\n          ) AS T2",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "# CE - 201 \n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 11
      },
      "id": 76,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#00796b",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 4,
        "y": 11
      },
      "id": 77,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "PS",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT \n--     concat(completedPollingStations,'/',totalPollingStations,' - ',IF(totalPollingStations<>0 AND completedPollingStations<>0,concat(round(( completedPollingStations/totalPollingStations * 100 ))),0)) AS value FROM (\n--     SELECT \n--         COUNT(DISTINCT pollingStation) AS totalPollingStations,\n--         SUM(IF(status = \"verrified\",1,0)) AS completedPollingStations\n--     FROM dashboard_status_CE_201\n--     WHERE electionName = \"$elections\"\n--     AND electoralDistrict = \"$district\"\n--     AND voteType = \"Ordinary\"\n--     ) AS T1\nSELECT \n    concat(if(completedPollingStations is null,0,completedPollingStations),'/',totalPollingStations,' - ',IF(totalPollingStations<>0 AND completedPollingStations<>0,concat(round(( completedPollingStations/totalPollingStations * 100 ))),0)) AS value FROM (\n    SELECT \n        $totalPollingStations AS totalPollingStations,\n        SUM(IF(status = \"Verified\",1,0)) AS completedPollingStations\n    FROM dashboard_status_CE_201\n    WHERE electionId = \"$electionId\"\n    AND voteType = \"Ordinary\" \n    ) AS T1\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#00796b",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 9,
        "y": 11
      },
      "id": 51,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "CC",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n    concat(if(completedCountingCentres is null,0,completedCountingCentres),'/',totalCountingCentres,' - ',IF(totalCountingCentres<>0 AND completedCountingCentres<>0,concat(round(( completedCountingCentres/totalCountingCentres * 100 ))),0)) AS value \n    FROM (\n    SELECT \n        $OrdinaryCountingCentres AS totalCountingCentres,\n        SUM(IF(status = \"Verified\",1,0)) AS completedCountingCentres\n    FROM (\n    SELECT \n        countingCentreId,\n        status\n    FROM dashboard_status_CE_201\n    WHERE electionId = \"$electionId\"\n    AND voteType = \"Ordinary\"\n    GROUP BY countingCentreId\n    ) AS T1\n    ) AS T2\n\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#00796b",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 14,
        "y": 11
      },
      "id": 79,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "PD",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT \n--     concat(if(completedPollingDivisions is null,0,completedPollingDivisions),'/',totalPollingDivisions,' - ',IF(totalPollingDivisions<>0 AND completedPollingDivisions<>0,concat(round(( completedPollingDivisions/totalPollingDivisions * 100 ))),0)) AS value \n--     FROM (\n--     SELECT \n--         $OrdinaryPollingDivisions AS totalPollingDivisions,\n--         SUM(IF(totalCountingCentres=completedCountingCentres,1,0)) AS completedPollingDivisions\n--         FROM (\n--         SELECT \n--         $OrdinaryCountingCentres AS totalCountingCentres,\n--         SUM(IF(status = \"Verified\",1,0)) AS completedCountingCentres\n--     FROM (\n--     SELECT \n--         countingCentreId,\n--         status\n--         FROM dashboard_status_CE_201\n--     WHERE electionId = \"$electionId\"\n--     AND voteType = \"Ordinary\"\n--     AND electoralDistrictId = \"$districtId\"\n--     GROUP BY countingCentreId\n--     ) AS T1\n--     ) AS T2\n--     ) AS T3\n\n\nSELECT\n      concat(if(completedPollingDivisions is null,0,completedPollingDivisions),'/',$OrdinaryPollingDivisions,' - ',IF($OrdinaryPollingDivisions<>0 AND completedPollingDivisions<>0,concat(round(( completedPollingDivisions/$OrdinaryPollingDivisions * 100 ))),0)) AS value \nFROM\n  (\n    SELECT\n      SUM(IF(notCompletedCountingCentres = 0, 1, 0)) as completedPollingDivisions\n    FROM\n      (\n        SELECT \n          pollingDivision.*,\n          SUM(IF(status = \"Verified\",0,1)) as notCompletedCountingCentres\n        FROM \n          dashboard_status_CE_201\n          join area_map on area_map.countingCentreId = dashboard_status_CE_201.countingCentreId\n          join area as pollingDivision on pollingDivision.areaId = area_map.pollingDivisionId\n        WHERE \n          dashboard_status_CE_201.electionId = \"$electionId\"\n          AND dashboard_status_CE_201.voteType = \"Ordinary\"\n        GROUP BY\n          area_map.pollingDivisionId\n      ) as pollingDivision201Status\n    ) as pollingDivision201Summary",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#00796b",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 5,
        "x": 19,
        "y": 11
      },
      "id": 94,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "80%",
      "prefix": "ED",
      "prefixFontSize": "80%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "value",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \nconcat(if(completedElectoralDistricts is null,0,completedElectoralDistricts),'/',totalElectoralDistricts,' - ',IF(totalElectoralDistricts<>0 AND completedElectoralDistricts<>0,concat(round(( completedElectoralDistricts/totalElectoralDistricts * 100 ))),0)) AS value \nFROM (\n        SELECT \n        $totalElectoralDistricts AS totalElectoralDistricts,\n        SUM(IF(totalCountingCentres=completedCountingCentres,1,0)) AS completedElectoralDistricts\n        FROM (\n          SELECT \n            COUNT(DISTINCT dashboard_status_CE_201.countingCentreId) AS completedCountingCentres,\n            COUNT(DISTINCT area_map.countingCentreId) AS totalCountingCentres,\n            electoralDistrict.areaName as electoralDistrict  \n          FROM \n            area_map\n            join area as pollingDivision on pollingDivision.areaId = area_map.pollingDivisionId\n            join area as electoralDistrict on electoralDistrict.areaId = area_map.electoralDistrictId\n            left join  dashboard_status_CE_201 on dashboard_status_CE_201.countingCentreId = area_map.countingCentreId\n              and dashboard_status_CE_201.status = \"Verified\"\n              and dashboard_status_CE_201.voteType = \"Ordinary\"\n              and dashboard_status_CE_201.electionId = \"$electionId\"\n          GROUP BY\n            area_map.electoralDistrictId\n          ) AS T1\n          ) AS T2",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "# \n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 13
      },
      "id": 65,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "content": "# Non Postal\n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 4,
        "y": 13
      },
      "id": 24,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "content": "# Postal\n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 11,
        "y": 13
      },
      "id": 25,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "content": "# Total\n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 6,
        "x": 18,
        "y": 13
      },
      "id": 26,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "content": "\n\n",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 81,
      "links": [],
      "mode": "markdown",
      "options": {},
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT IF(totalRegisteredPostalVotes<>0 AND totalVoteCount<>0,concat(round(( totalVoteCount/totalRegisteredPostalVotes * 100 ))),0) AS percentage FROM(\n-- SELECT SUM(\n--         IF(pre_cc_wise_rejected_vote_count.rejectedVoteCount IS NOT NULL, pre_cc_wise_rejected_vote_count.rejectedVoteCount, 0) + \n--         IF(pre_cc_wise_valid_vote_count.validVoteCount IS NOT NULL, pre_cc_wise_valid_vote_count.validVoteCount, 0)\n--     ) AS totalVoteCount,\n--     SUM(IF(registered_postal_non_postal_votes_view.registeredPostalVotersCount IS NOT NULL,registered_postal_non_postal_votes_view.registeredPostalVotersCount,0)) AS totalRegisteredPostalVotes\n-- FROM \n--   pre_cc_wise_rejected_vote_count \n--   INNER JOIN pre_cc_wise_valid_vote_count ON\n--       pre_cc_wise_rejected_vote_count.countingCentreId=pre_cc_wise_valid_vote_count.countingCentreId\n-- \tINNER JOIN registered_postal_non_postal_votes_view ON\n--       pre_cc_wise_valid_vote_count.countingCentreId = registered_postal_non_postal_votes_view.countingCentreId\n--       WHERE pre_cc_wise_valid_vote_count.electionId=1\n--       and pre_cc_wise_rejected_vote_count.electoralDistrictName  = \"$district\"\n--       and pre_cc_wise_valid_vote_count.voteType = \"Postal\"\n-- ) AS T1\n  SELECT IF($totalRegisteredPostalVoters<>0 AND ($totalPolledValidPostalVotes + $totalPolledRejectedPostalVotes)<>0,concat(round(( ($totalPolledValidPostalVotes + $totalPolledRejectedPostalVotes)/$totalRegisteredPostalVoters * 100 ))),0) AS percentage \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Unofficial Ballot Box Count",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "content": "# Electors\n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 16
      },
      "id": 20,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": false,
      "colorPrefix": false,
      "colorValue": true,
      "colors": [
        "#d44a3a",
        "#FADE2A",
        "#299c46"
      ],
      "decimals": null,
      "format": "locale",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 4,
        "y": 16
      },
      "id": 47,
      "interval": "1800m",
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "100%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "15992096",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT SUM(pollingStation._registeredVotersCount) FROM area_map \n-- join area as pollingStation on pollingStation.areaId = area_map.pollingStationId \n-- WHERE electoralDistrictId in ($districtId) and area_map.electionId=$electionId;\n\nselect $totalRegisteredOrdinaryVoters\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": false,
      "colorPrefix": false,
      "colorValue": true,
      "colors": [
        "#B877D9",
        "#F2CC0C",
        "#299c46"
      ],
      "format": "locale",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 11,
        "y": 16
      },
      "id": 11,
      "interval": "",
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "val",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select $totalRegisteredPostalVoters as val\n\n-- select SUM(countingCentre._registeredVotersCount) from area_map join area as countingCentre on countingCentre.areaId = area_map.countingCentreId \n-- WHERE voteType=\"Postal\" and electoralDistrictId=$districtId",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": false,
      "colorPrefix": false,
      "colorValue": true,
      "colors": [
        "#B877D9",
        "#E0B400",
        "#299c46"
      ],
      "format": "locale",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 6,
        "x": 18,
        "y": 16
      },
      "id": 29,
      "interval": "",
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "15992096 + 1977090",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select $totalRegisteredOrdinaryVoters + $totalRegisteredPostalVoters\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "# Polled\n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 18
      },
      "id": 19,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeat": null,
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#3274D9",
        "#d44a3a"
      ],
      "format": "locale",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 4,
        "y": 18
      },
      "id": 15,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "687952",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount \n-- FROM dashboard_status_CE_201  \n-- WHERE voteType = \"Ordinary\"  \n-- AND electionId = \"$electionId\" \n-- -- AND (status=\"Submitted\" OR status=\"Entered\" OR status=\"Verified\")\n-- AND electoralDistrictId = \"$districtId\"  \nselect $totalPolledOrdinaryBallotCount",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": false,
      "colorPrefix": false,
      "colorValue": true,
      "colors": [
        "#B877D9",
        "#3274D9",
        "#299c46"
      ],
      "format": "locale",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 11,
        "y": 18
      },
      "id": 18,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "18221",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount \n-- FROM dashboard_status_CE_201  \n-- WHERE voteType = \"Postal\"  \n-- AND electionId = \"$electionId\" \n-- AND electoralDistrictId IN ($districtId)  \nselect $totalPolledPostalBallotCount \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#1F60C4",
        "#d44a3a"
      ],
      "format": "locale",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 6,
        "x": 18,
        "y": 18
      },
      "id": 31,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "687952 + 18221",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": " select $totalPolledOrdinaryBallotCount + $totalPolledPostalBallotCount   \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "# %\n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 20
      },
      "id": 87,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#56A64B",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 4,
        "y": 20
      },
      "id": 28,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "120%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "percentage",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\nSELECT IF($totalRegisteredOrdinaryVoters<>0 AND ($totalPolledOrdinaryBallotCount)<>0,concat(round(( ($totalPolledOrdinaryBallotCount)/$totalRegisteredOrdinaryVoters * 100 ))),0) AS percentage \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorPrefix": false,
      "colorValue": true,
      "colors": [
        "#B877D9",
        "#56A64B",
        "#299c46"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 11,
        "y": 20
      },
      "id": 32,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "120%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "percentage",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\n  SELECT IF($totalRegisteredPostalVoters<>0 AND ($totalPolledPostalBallotCount)<>0,concat(round(( ($totalPolledPostalBallotCount)/$totalRegisteredPostalVoters * 100 ))),0) AS percentage \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#37872D",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 6,
        "x": 18,
        "y": 20
      },
      "id": 33,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "120%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "percentage",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- select sum(($totalPolledValidOrdinaryVotes + $totalPolledValidPostalVotes + $totalPolledRejectedPostalVotes + $totalPolledRejectedOrdinaryVotes)/($totalRegisteredOrdinaryVoters + $totalRegisteredPostalVoters) * 100)\n SELECT IF(sum($totalPolledOrdinaryBallotCount + $totalPolledPostalBallotCount )<>0 AND sum($totalRegisteredOrdinaryVoters + $totalRegisteredPostalVoters)<>0,\n          (round(( ($totalPolledOrdinaryBallotCount + $totalPolledPostalBallotCount)/($totalRegisteredOrdinaryVoters + $totalRegisteredPostalVoters) * 100 ))),0) AS percentage \n\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "\n\n",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 22
      },
      "id": 82,
      "links": [],
      "mode": "markdown",
      "options": {},
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT IF(totalRegisteredPostalVotes<>0 AND totalVoteCount<>0,concat(round(( totalVoteCount/totalRegisteredPostalVotes * 100 ))),0) AS percentage FROM(\n-- SELECT SUM(\n--         IF(pre_cc_wise_rejected_vote_count.rejectedVoteCount IS NOT NULL, pre_cc_wise_rejected_vote_count.rejectedVoteCount, 0) + \n--         IF(pre_cc_wise_valid_vote_count.validVoteCount IS NOT NULL, pre_cc_wise_valid_vote_count.validVoteCount, 0)\n--     ) AS totalVoteCount,\n--     SUM(IF(registered_postal_non_postal_votes_view.registeredPostalVotersCount IS NOT NULL,registered_postal_non_postal_votes_view.registeredPostalVotersCount,0)) AS totalRegisteredPostalVotes\n-- FROM \n--   pre_cc_wise_rejected_vote_count \n--   INNER JOIN pre_cc_wise_valid_vote_count ON\n--       pre_cc_wise_rejected_vote_count.countingCentreId=pre_cc_wise_valid_vote_count.countingCentreId\n-- \tINNER JOIN registered_postal_non_postal_votes_view ON\n--       pre_cc_wise_valid_vote_count.countingCentreId = registered_postal_non_postal_votes_view.countingCentreId\n--       WHERE pre_cc_wise_valid_vote_count.electionId=1\n--       and pre_cc_wise_rejected_vote_count.electoralDistrictName  = \"$district\"\n--       and pre_cc_wise_valid_vote_count.voteType = \"Postal\"\n-- ) AS T1\n  SELECT IF($totalRegisteredPostalVoters<>0 AND ($totalPolledValidPostalVotes + $totalPolledRejectedPostalVotes)<>0,concat(round(( ($totalPolledValidPostalVotes + $totalPolledRejectedPostalVotes)/$totalRegisteredPostalVoters * 100 ))),0) AS percentage \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Official Ballot Box Count",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "content": "# Polled\n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 23
      },
      "id": 83,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#8e24aa",
        "#d44a3a"
      ],
      "format": "locale",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 4,
        "y": 23
      },
      "id": 84,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "687952",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount  \n-- FROM dashboard_status_CE_201   \n-- WHERE voteType = \"Ordinary\"   \n-- AND electionId = \"$electionId\"  \n-- AND status = \"Verified\"\n-- AND electoralDistrictId = \"$districtId\"\n\nselect $totalPolledOrdinaryBallotCountOfficial\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": false,
      "colorPrefix": false,
      "colorValue": true,
      "colors": [
        "#B877D9",
        "#8e24aa",
        "#299c46"
      ],
      "format": "locale",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 11,
        "y": 23
      },
      "id": 85,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "15710",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount \n-- FROM dashboard_status_CE_201  \n-- WHERE voteType = \"Postal\"  \n-- AND electionId = \"$electionId\" \n-- AND status = \"Verified\"\n-- AND electoralDistrictId = \"$districtId\"  \nselect $totalPolledPostalBallotCountOfficial \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#7b1fa2",
        "#d44a3a"
      ],
      "format": "locale",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 6,
        "x": 18,
        "y": 23
      },
      "id": 86,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "687952 + 15710",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": " select $totalPolledOrdinaryBallotCountOfficial + $totalPolledPostalBallotCountOfficial \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "content": "# %\n\n\n\n\n",
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 25
      },
      "id": 27,
      "links": [],
      "mode": "markdown",
      "options": {},
      "repeatDirection": "h",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT NOW() AS time,SUM(IF(T1.registeredPostalVotersCount IS NOT NULL, T1.registeredPostalVotersCount, 0) + IF(T1.registeredOrdinaryVotersCount IS NOT NULL, T1.registeredOrdinaryVotersCount, 0))  AS value FROM (\nSELECT \n      electoralDistrict.areaName as electoralDistrictName,\n      electoralDistrict.areaId as electoralDistrictId,\n      \n      pollingDivision.areaName as pollingDivisionName,\n      pollingDivision.areaId as pollingDivisionId,\n      \n      -- pollingDistrict.areaName as pollingDistrictName,\n      -- pollingDistrict.areaId as pollingDistrictId,\n      \n      pollingStation.areaName as pollingStationName,\n\t  pollingStation.areaId as pollingStationId,\n      sum(pollingStation._registeredVotersCount) as registeredOrdinaryVotersCount,\n      \n      countingCentre.areaName as countingCentreName,\n      countingCentre.areaId as countingCentreId,\n      sum(countingCentre._registeredVotersCount) as registeredPostalVotersCount,\n      \n      countingCentreElection.voteType\n      \n      -- districtCentre.areaName as districtCentreName,\n      -- districtCentre.areaId as districtCentreId\n      \n    \n    FROM \n      area countingCentre \n      \n      left join area_area as pollingStationMapping on pollingStationMapping.parentAreaId = countingCentre.areaId\n      left join area as pollingStation on pollingStation.areaId = pollingStationMapping.childAreaId and pollingStation.areaType = \"PollingStation\"\n      \n      left join area_area as pollingDistrictMapping on pollingDistrictMapping.childAreaId = pollingStation.areaId\n      left join area as pollingDistrict on pollingDistrict.areaId = pollingDistrictMapping.parentAreaId and pollingDistrict.areaType = \"PollingDistrict\"\n      \n      left join area_area as pollingDivisionMapping on pollingDivisionMapping.childAreaId = pollingDistrict.areaId\n      left join area as pollingDivision on pollingDivision.areaId = pollingDivisionMapping.parentAreaId and pollingDivision.areaType = \"PollingDivision\"\n      \n      inner join area_area as electoralDistrictMapping on  (electoralDistrictMapping.childAreaId = pollingDivision.areaId or electoralDistrictMapping.childAreaId = countingCentre.areaId )\n      inner join area as electoralDistrict on electoralDistrict.areaId = electoralDistrictMapping.parentAreaId and electoralDistrict.areaType = \"ElectoralDistrict\"\n      \n      inner join area_area as districtCentreMapping on districtCentreMapping.childAreaId = countingCentre.areaId\n      inner join area as districtCentre on districtCentre.areaId = districtCentreMapping.parentAreaId and districtCentre.areaType = \"DistrictCentre\"\n      \n      inner join election as countingCentreElection on countingCentreElection.electionId = countingCentre.electionId\n    WHERE \n      countingCentre.areaType = \"CountingCentre\"\n      \n    GROUP BY\n      electoralDistrict.areaId,\n      pollingDivision.areaId,\n      countingCentre.areaId,\n      pollingStation.areaId\n      ) AS T1\n     WHERE T1.electoralDistrictName = \"$district\"\n     AND T1.pollingDivisionName IN ($Polling_Division)\n     OR T1.pollingDivisionName IS NULL\n\n    \n    \n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "text"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#56A64B",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 4,
        "y": 25
      },
      "id": 88,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "120%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "percentage",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\nSELECT IF($totalRegisteredOrdinaryVoters<>0 AND ($totalPolledOrdinaryBallotCountOfficial)<>0,concat(round(( ($totalPolledOrdinaryBallotCountOfficial)/$totalRegisteredOrdinaryVoters * 100 ))),0) AS percentage \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorPrefix": false,
      "colorValue": true,
      "colors": [
        "#B877D9",
        "#56A64B",
        "#299c46"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 11,
        "y": 25
      },
      "id": 89,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "120%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "percentage",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\n  SELECT IF($totalRegisteredPostalVoters<>0 AND ($totalPolledPostalBallotCountOfficial)<>0,concat(round(( ($totalPolledPostalBallotCountOfficial)/$totalRegisteredPostalVoters * 100 ))),0) AS percentage \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorPostfix": true,
      "colorValue": true,
      "colors": [
        "#299c46",
        "#37872D",
        "#d44a3a"
      ],
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 6,
        "x": 18,
        "y": 25
      },
      "id": 90,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "%",
      "postfixFontSize": "120%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "percentage",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- select sum(($totalPolledValidOrdinaryVotes + $totalPolledValidPostalVotes + $totalPolledRejectedPostalVotes + $totalPolledRejectedOrdinaryVotes)/($totalRegisteredOrdinaryVoters + $totalRegisteredPostalVoters) * 100)\n SELECT IF(sum($totalPolledOrdinaryBallotCountOfficial + $totalPolledPostalBallotCountOfficial)<>0 AND sum($totalRegisteredOrdinaryVoters + $totalRegisteredPostalVoters)<>0,\n          (round(( ($totalPolledOrdinaryBallotCountOfficial + $totalPolledPostalBallotCountOfficial)/($totalRegisteredOrdinaryVoters + $totalRegisteredPostalVoters) * 100 ))),0) AS percentage \n\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "invoiceId"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "invoice",
          "timeColumn": "issuedAt",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "singlestat",
      "valueFontSize": "120%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "avg"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 19,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "text": "Presidential Election 2019 [ EC System Test 7 ]",
          "value": "Presidential Election 2019 [ EC System Test 7 ]"
        },
        "datasource": "MySQL",
        "definition": "SELECT electionName FROM election WHERE election.parentElectionId IS NULL",
        "hide": 0,
        "includeAll": false,
        "label": "Election",
        "multi": false,
        "name": "elections",
        "options": [],
        "query": "SELECT electionName FROM election WHERE election.parentElectionId IS NULL",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "MySQL",
        "definition": "select DISTINCT `areaName` from area where areaType='PollingDivision' union SELECT null as `areaName`;",
        "hide": 2,
        "includeAll": true,
        "label": "Polling Division",
        "multi": true,
        "name": "Polling_Division",
        "options": [],
        "query": "select DISTINCT `areaName` from area where areaType='PollingDivision' union SELECT null as `areaName`;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "12845",
          "value": "12845"
        },
        "datasource": "MySQL",
        "definition": "SELECT if(COUNT(*) is null,0,COUNT(*) ) FROM area_map WHERE  electionId = $electionId and pollingStationId is not null;",
        "hide": 2,
        "includeAll": false,
        "label": "totalPollingStations",
        "multi": false,
        "name": "totalPollingStations",
        "options": [],
        "query": "SELECT if(COUNT(*) is null,0,COUNT(*) ) FROM area_map WHERE  electionId = $electionId and pollingStationId is not null;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "15992096",
          "value": "15992096"
        },
        "datasource": "MySQL",
        "definition": "SELECT SUM(pollingStation._registeredVotersCount) FROM area_map      join area as pollingStation on pollingStation.areaId = area_map.pollingStationId    WHERE area_map.electionId=$electionId;",
        "hide": 2,
        "includeAll": false,
        "label": "totalRegisteredOrdinaryVoters",
        "multi": false,
        "name": "totalRegisteredOrdinaryVoters",
        "options": [],
        "query": "SELECT SUM(pollingStation._registeredVotersCount) FROM area_map      join area as pollingStation on pollingStation.areaId = area_map.pollingStationId    WHERE area_map.electionId=$electionId;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "1977090",
          "value": "1977090"
        },
        "datasource": "MySQL",
        "definition": "select SUM(countingCentre._registeredVotersCount) from area_map join area as countingCentre on countingCentre.areaId = area_map.countingCentreId  WHERE voteType=\"Postal\" ",
        "hide": 2,
        "includeAll": false,
        "label": "totalRegisteredPostalVoters",
        "multi": false,
        "name": "totalRegisteredPostalVoters",
        "options": [],
        "query": "select SUM(countingCentre._registeredVotersCount) from area_map join area as countingCentre on countingCentre.areaId = area_map.countingCentreId  WHERE voteType=\"Postal\" ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "1179",
          "value": "1179"
        },
        "datasource": "MySQL",
        "definition": "select count(DISTINCT countingCentreId) from area_map WHERE electionId=$electionId and voteType=\"NonPostal\"",
        "hide": 2,
        "includeAll": false,
        "label": "OrdinaryCountingCentres",
        "multi": false,
        "name": "OrdinaryCountingCentres",
        "options": [],
        "query": "select count(DISTINCT countingCentreId) from area_map WHERE electionId=$electionId and voteType=\"NonPostal\"",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "1",
          "value": "1"
        },
        "datasource": "MySQL",
        "definition": "select electionId from election where electionName = \"$elections\"",
        "hide": 2,
        "includeAll": false,
        "label": "electionId",
        "multi": false,
        "name": "electionId",
        "options": [],
        "query": "select electionId from election where electionName = \"$elections\"",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "371",
          "value": "371"
        },
        "datasource": "MySQL",
        "definition": "select count(DISTINCT countingCentreId) from area_map WHERE electionId=$electionId and voteType=\"Postal\"",
        "hide": 2,
        "includeAll": false,
        "label": "PostalCountingCentres",
        "multi": false,
        "name": "PostalCountingCentres",
        "options": [],
        "query": "select count(DISTINCT countingCentreId) from area_map WHERE electionId=$electionId and voteType=\"Postal\"",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "1113",
          "value": "1113"
        },
        "datasource": "MySQL",
        "definition": "SELECT COUNT(*) FROM area_map WHERE  voteType=\"Postal\";",
        "hide": 2,
        "includeAll": false,
        "label": "totalPollingStationsPostal",
        "multi": false,
        "name": "totalPollingStationsPostal",
        "options": [],
        "query": "SELECT COUNT(*) FROM area_map WHERE  voteType=\"Postal\";",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "160",
          "value": "160"
        },
        "datasource": "MySQL",
        "definition": "select count(DISTINCT pollingDivisionId) from area_map WHERE electionId=$electionId",
        "hide": 2,
        "includeAll": false,
        "label": "OrdinaryPollingDivisions",
        "multi": false,
        "name": "OrdinaryPollingDivisions",
        "options": [],
        "query": "select count(DISTINCT pollingDivisionId) from area_map WHERE electionId=$electionId",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "687952",
          "value": "687952"
        },
        "datasource": "MySQL",
        "definition": "SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount  FROM dashboard_status_CE_201   WHERE voteType = \"Ordinary\"   AND electionId = \"$electionId\"  ",
        "hide": 2,
        "includeAll": false,
        "label": "totalPolledOrdinaryBallotCount",
        "multi": false,
        "name": "totalPolledOrdinaryBallotCount",
        "options": [],
        "query": "SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount  FROM dashboard_status_CE_201   WHERE voteType = \"Ordinary\"   AND electionId = \"$electionId\"  ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "18221",
          "value": "18221"
        },
        "datasource": "MySQL",
        "definition": "SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount  FROM dashboard_status_CE_201   WHERE voteType = \"Postal\"   AND electionId = \"$electionId\" ",
        "hide": 2,
        "includeAll": false,
        "label": "totalPolledPostalBallotCount",
        "multi": false,
        "name": "totalPolledPostalBallotCount",
        "options": [],
        "query": "SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount  FROM dashboard_status_CE_201   WHERE voteType = \"Postal\"   AND electionId = \"$electionId\" ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "687952",
          "value": "687952"
        },
        "datasource": "MySQL",
        "definition": "SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount   FROM dashboard_status_CE_201    WHERE voteType = \"Ordinary\"    AND electionId = \"$electionId\"   AND status = \"Verified\" ",
        "hide": 2,
        "includeAll": false,
        "label": "totalPolledOrdinaryBallotCountOfficial",
        "multi": false,
        "name": "totalPolledOrdinaryBallotCountOfficial",
        "options": [],
        "query": "SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount   FROM dashboard_status_CE_201    WHERE voteType = \"Ordinary\"    AND electionId = \"$electionId\"   AND status = \"Verified\" ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "15710",
          "value": "15710"
        },
        "datasource": "MySQL",
        "definition": "SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount  FROM dashboard_status_CE_201   WHERE voteType = \"Postal\"   AND electionId = \"$electionId\"  AND status = \"Verified\" ",
        "hide": 2,
        "includeAll": false,
        "label": "totalPolledPostalBallotCountOfficial",
        "multi": false,
        "name": "totalPolledPostalBallotCountOfficial",
        "options": [],
        "query": "SELECT  if(sum(ballotCount) is null,0,sum(ballotCount)) AS totalVoteCount  FROM dashboard_status_CE_201   WHERE voteType = \"Postal\"   AND electionId = \"$electionId\"  AND status = \"Verified\" ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "22",
          "value": "22"
        },
        "datasource": "MySQL",
        "definition": "select count(DISTINCT electoralDistrictId) from area_map WHERE electionId=$electionId",
        "hide": 2,
        "includeAll": false,
        "label": "totalElectoralDistricts",
        "multi": false,
        "name": "totalElectoralDistricts",
        "options": [],
        "query": "select count(DISTINCT electoralDistrictId) from area_map WHERE electionId=$electionId",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Results Status Ballot Box National",
  "uid": "e2z7PbJWk",
  "version": 42
}